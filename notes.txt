/r 10d6x6cs>=5df=1 (relance les 6, supprime les 1 comme negatif, tout ce qui est au dessus de 4 est une réussite)
base du système de réussite.

Actuellement, pas tout transposer en npqv2. Les noms des templates ne sont pas conformes, il faut aussi modifier le fichier des sous formes.

le meilleur système de lancer de dés est :
/r Nd6x6cs>4  où N est le nombre de dés, les 6 relance et on garde les 5 et 6 (>4)
C'est la difficulté qui peut produire des négatifs (on enlève la difficulte)
-4 echec critique ? en c'est l'idée de faire la moitié de 1 (ou le tier) et avoir aucun succès



 {{> "systems/npqv2/templates/sheets/parts/actor-bibiographie.html"}}  

macro ------------------------------------------------------
========= Tirage générique de base =========================
const form = `<form>
 <table>
      <tbody>
        <tr><td>Nb dés</td>
            <td><input name="nbdes" type="integer" value=5 /></td></tr>
        <tr><td>Réserve</td>
            <td><input name="reserve" type="integer" value=0 /></td></tr>
        <tr><td>Difficulté</td>
            <td><input name="difficulte" type="integer"value=5 /></td></tr>
      </tbody>
    </table>
</form>`;

function handleSubmit(html) {
  const formElement = html[0].querySelector('form');
  const formData = new FormDataExtended(formElement);
  const formDataObject = formData.toObject();

  // expects an object: { input-1: 'some value' }
//  console.log('output form data object', formDataObject);
//  console.log('Nb dés', formDataObject);
//  console.log('Réserve', formDataObject["reserve"]);
  // ne mache pas : game.chatMessageLancerDes("coucou",5,3,5);
// traitement de retour du dialogue
  let res = parseInt( formDataObject["reserve"]);
  let nbdes = parseInt( formDataObject["nbdes"]);
  let diff = parseInt( formDataObject["difficulte"]);
// res ne peut etre plus grand que ndes -1 (impair) ou -2 (pair)
  if(res >= nbdes) res = nbdes-1;
   let lancer = nbdes-res;
   let r = new Roll(""+(lancer)+"D6");
   r.evaluate({async :false });
  let resultat = parseInt(r.result);
  let nbsucces = parseInt((resultat - diff + 5) / 5)  ;
  if (nbsucces <= 0) nbsucces = 0;
  if (nbsucces > 0) nbsucces += parseInt(res);
// --------------------------------------------

  let monTexte = "Votre jet("+ lancer + "D6) ainsi que "+ parseInt(res)+ 
" succès en réserve contre une difficulté de "+ diff + ", vous donne <b>"+nbsucces+" mises</b> à jouer";
  // sortie du texte
   let chatData = {
        user: game.user._id,
        speaker: ChatMessage.getSpeaker(),
        flavor: monTexte,
        rollMode: game.settings.get('core', 'rollMode')
    };
    //ChatMessage.create(chatData);
   let cm = r.toMessage(chatData);
}

 function simpleDialogue(){
  let i = 10;
  let sp = ChatMessage.getSpeaker();
    new Dialog({
    title: "lancer de dé pour "+sp.alias,
    content: form,
    buttons: {
        submit: { label: "Submit", callback: handleSubmit },
        cancel: { label: "Cancel" },
    },
    }).render(true);
}

simpleDialogue();


///////////////////////////
La gestion des personnages
les états sont Fatigue, Faiblesse, Tension, Point de Magie
  ils ont 4 rangs, qui peuvent être déséquilibré (value = valeur actuel, max = valeur du rang)
les difficultés sont : 6,9,12,15

Attention :
Actuellement seul peut être le Pj est fait
dans les PNJ : nous avons le Boss = PJ, le figurant (qui as valeur, domaine, spécialités, et extra ainsi que compteur), le montre qui peut avoir beaucou plus de rang de compteur...

templates.json : 
"types": ["pj", "figurant", "monstre"],

et 
"Boss" : {
      "templates": ["base","etats","cmps"],
      "nivTresor":4
    },

pour les monstres : les rangs peut être mis à de plus grandes valeurs (regroupant les différents rangs suivants), de découpage se fera par une réf : decoupe donnant le nombre par ligne

Pour la magie c'est pas encore réelement fait : quelques points pour les dépenser ou donner quelques bonus (de 0 à 5)
le système recherché sera sans points de magie, la fatigue prend le relais

le favoris pour l'instant je ne vois que le jet de cmp
l'utilisation d'arme ?
Comment compter les amures : selection : porté ou pas ?

TARGET
pour obtenir la liste des targets, c'est le user (cof:) , je ne sais pas ce que donne canvas... mais le [...] donne un tableau (transforme un
set en tableau)
let targets = ([...game.user.targets].length > 0) ? [...game.user.targets] : canvas.tokens.objects.children.filter(t => t._controlled);

INTERFACE
pour envoyez une erreur :
ui.notification.error("text") : message rouge
ui.notifications.warn("coucou c'est moi") : message jaune
ui.notifications.notify("coucou c'est moi aussi") : message bleu..

//----------------------------- les cartes à jouer
 dc = game.cards.get("kZ56B6woCuqqE5B3") -- le jeu de cartes
 dc.dealDialog()
 dc.deal( [ game.cards.get("0WVKDZAaFnenQ2U0") ],1, {chatNotification: true }) // 0WVK... Main Joueur 1
 